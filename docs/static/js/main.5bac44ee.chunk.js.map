{"version":3,"sources":["components/AddCatgory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","index","GiftExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA6BeA,EA1BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAWrC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAKd,SACI,uBACIK,KAAM,OACNC,MAAOP,EACPQ,SAAU,SAAAL,GAAC,OAAIF,EAAcE,EAAEM,OAAOF,a,+BCnBzCG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCcDO,EAjBE,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDP,SAACA,GAAc,IAAD,EACZZ,mBAAS,CAACmB,KAAK,GAAIa,SAAS,IADhB,mBAC/BC,EAD+B,KACxBC,EADwB,KAQtC,OALAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAACf,KAAMkB,EAAML,SAAS,SAC9C,CAACpB,IAEGqB,EDLwBK,CAAa1B,GAAhCa,EAFmB,EAExBN,KAAaa,EAFW,EAEXA,QAEpB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,8CACZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,EAAKiB,GAAN,OAAgB,cAAC,EAAD,eAA6BjB,GAAXiB,YESlDC,EAnBO,WAAO,IAAD,EAEYxC,mBAAS,CAAC,4BAFtB,mBAEjByC,EAFiB,KAEL1C,EAFK,KAIxB,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ0C,EAAWpB,KAAI,SAAAb,GAAK,OAAI,cAAC,EAAD,CAAsBI,SAAUJ,GAAjBA,Y,MCX3DkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5bac44ee.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleSumbit = (e) =>{\r\n        e.preventDefault()\r\n        setCategories(cats => [inputValue, ...cats])\r\n        setInputValue('')\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSumbit}>\r\n            <input \r\n                type={\"text\"} \r\n                value={inputValue}\r\n                onChange={e => setInputValue(e.target.value)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=NJSK75G9iJRu13FT9wpRs7o7jf8hHc7L`\r\n    const res = await fetch(url)\r\n    const {data} = await res.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nconst GiftGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Carganding...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img, index) => <GifGridItem key={index} {...img} />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({data:[], loading: true})\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs => setState({data: imgs, loading: false}))\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCatgory';\r\nimport GiftGrid from './components/GiftGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Inteligencia Artificial\"])\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(value => <GiftGrid key={value} category={value} />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GiftExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}